import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox
from appBkp import Ui_MainWindow


class MainWindow(QMainWindow):
    def __init__(self):

        showTup = []
        music = []
        placeTup = []
        movie = []

        super(MainWindow, self).__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.ui.showBtn.clicked.connect(self.actShow)
        self.ui.musicBtn.clicked.connect(self.actMusic)
        self.ui.placeBtn.clicked.connect(self.actPlace)
        self.ui.movieBtn.clicked.connect(self.actMovie)

###################################################################
###################### parte dos shows ############################
###################################################################
        def listAllShows():
            name = self.ui.showInput.text()
            date = self.ui.showDateInput.text()
            self.ui.showList.clear()
            self.ui.showDate.clear()
            for k, v in showTup:
                if k == name and v == date:
                    self.ui.showList.addItem(k)
                    self.ui.showDate.addItem(v)

    def actShow(self):
        rdListShow = self.ui.showRdList.isChecked()
        rdAddShow = self.ui.showRdAdd.isChecked()
        rdRemoveShow = self.ui.showRdRemove.isChecked()
        rdSearchShow = self.ui.showRdSearch.isChecked()
        rdResetShow = self.ui.showRdReset.isChecked()

        name = self.ui.showInput.text()
        date = self.ui.showDateInput.text()

        if not rdListShow and not rdAddShow and not rdRemoveShow and not rdSearchShow and not rdResetShow:
            msg = QMessageBox()
            msg.setWindowTitle('Erro:')
            msg.setText(
                'Escolha uma opção antes de interagir com lista de Shows.')
            msg.setIcon(QMessageBox.Critical)
            msg.exec_()
            return

        if not rdListShow and not name and not date or (not name and date or (name and not date)):
            msg = QMessageBox()
            msg.setWindowTitle('Erro:')
            msg.setText(
                'Antes de acrescentar um show é necessário informar qual e qual a data.')
            msg.setIcon(QMessageBox.Question)
            msg.exec_()
            return
        else:
            if rdListShow:
                listAll()
            elif rdAddShow:
                showTup.append((name, date))
                self.ui.showList.addItem(name)
                self.ui.showDate.addItem(date)
                self.ui.showInput.setText('')
                self.ui.showDateInput.setText('')
            elif rdRemoveShow:
                rmShow = name
                rmDate = date
                showTup.remove((name, date))
                self.ui.showList.clear()
                self.ui.showDate.clear()
                for k, v in showTup:
                    self.ui.showList.addItem(k)
                    self.ui.showDate.addItem(v)
            elif rdSearchShow:
                fdShow = name
                fdDate = date
                self.ui.showList.clear()
                self.ui.showDate.clear()
                for k, v in showTup:
                    if k == name and v == date:
                        self.ui.showList.addItem(k)
                        self.ui.showDate.addItem(v)
            elif rdResetShow:
                self.ui.showList.clear()
                self.ui.showDate.clear()
                showTup = []

    ###################################################################
    ###################### parte das músicas ##########################
    ###################################################################

    def actMusic(self):
        rdAddMusic = self.ui.musicRdAdd.isChecked()
        rdRemoveMusic = self.ui.musicRdRemove.isChecked()
        rdSearchMusic = self.ui.musicRdSearch.isChecked()
        rdResetMusic = self.ui.musicRdReset.isChecked()

###################################################################
###################### parte dos lugares ##########################
###################################################################
    def actPlace(self):
        rdAddPlace = self.ui.placeRdAdd.isChecked()
        rdRemovePlace = self.ui.placeRdRemove.isChecked()
        rdSearchPlace = self.ui.placeRdSearch.isChecked()
        rdResetPlace = self.ui.placeRdReset.isChecked()

###################################################################
###################### parte dos filmes ###########################
###################################################################
    def actMovie(self):
        rdAddMovie = self.ui.movieRdAdd.isChecked()
        rdRemoveMovie = self.ui.movieRdRemove.isChecked()
        rdSearchMovie = self.ui.movieRdSearch.isChecked()
        rdResetMovie = self.ui.movieRdReset.isChecked()


if __name__ == "__main__":
    app = QApplication(sys.argv)

    window = MainWindow()
    window.show()

    sys.exit(app.exec_())
